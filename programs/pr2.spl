while(!streams[0].empty && !streams[1].empty && !streams[2].empty){

    
    a = /* you can see inline comments also work */ streams[2].take;
    b = streams[1].take;
    c = streams[0].take;

    print(a, b, c, b + c, a + b);

};

end;

/*

If empty input i.e. no stream data is provided, before execution of the program begins, 
the interpreter will look through the parse tree of the program and determine the number 
of expected streams by finding the highest number stream referenced and it will instead 
run the program using this many empty streams (i.e. here would be 3 as the streams are 0 indexed
so it adds one when it finds the max)

while(!streams[0].empty && !streams[1].empty && !streams[2].empty){

    variables in our language are assigned int expressions which are then evaluated
    to their actual int value and stored in our data structure in the interpreter
    along with the name of the variable

    a = streams[2].take;
    b = streams[1].take;
    c = streams[0].take;

    print takes a list of int expressions and as "b + c" and "a + b" are
    also int expressions they are perfectly valid arguments

    print(a, b, c, b + c, a + b);

};

end;

*/